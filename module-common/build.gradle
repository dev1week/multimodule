plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.16'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	//그레이들 내부에서 api 키워드를 사용하기 위해서 정의
	id 'java-library'
}

group = 'dev.be'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//db는 어떤 모듈이든 하나로 사용하기 때문에 common 모듈에서 정의하는 것이 일반적이다.

	api 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.33'

}

tasks.named('test') {
	useJUnitPlatform()
}

//common 모듈은 다른 모듈에서 참조만하고 실행은 하지 않는다
//즉 굳이 빌드시 실행가능한 jar 파일을 만들 필요가 없다.
tasks.bootJar{enabled= false} //xxx.jar로 생성 => dependency 까지 같이 포함
tasks.jar{enabled = true}	//xxx-plain.jar로 생성 => class, resource만을 포함

//빌드 명령어
// ./gradlew clean :module-api:buildNeeded --stacktrace --info --refresh-dependencies -x test
//debug => info => warn => error


//cd module-api
// cd build/libs
// java -jar module-api-0.0.1-SNAPSHOT.jar